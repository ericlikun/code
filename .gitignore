.env
.env.*
!.env.example

.git

vender
package-lock
/package

/.svelte-kit

vite.config.js.timestamp-*
vite.config.ts.timestamp-*

wrangler.toml

####################  TEXT

# 编辑器和 IDE
*.swp
*.swo
*.swn
*.bak
*.tmp
*.log
*.lock
*.iml
*.idea
.vscode/
.vs/

# 操作系统
Thumbs.db
.DS_Store
*.DS_Store

# 构建工具
target/
*.jar
*.war
*.ear

# 编译产物
*.class
*.dll
*.exe
*.obj
*.o
*.a
*.lib
*.pdb
*.dll
*.dylib

# 测试报告
*.coverage
*.cover
*.egg-info/
*.egg

# 日志文件
logs/


####################  JavaScript

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Dependency directories
node_modules/

# Build output
dist/
build/
out/

# Testing
coverage/

#################### Python

# 虚拟环境
venv/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
.cpython-36m-x86_64-linux-gnu.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
*.egg
*.egg-info/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST


# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask
instance/
.webassets-cache

# Scrapy
.scrapy

# Sphinx documentation
docs/_build/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   be needed in other platforms.
#   pipenv --three/--two uses python-dotenv to load environment variables, instead of having
#   to use `.env`. See https://github.com/pypa/pipenv/tree/master/environments
#   Uncomment next line to ignore .env files
#.env
Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# MyPy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/


#################### Java

# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear

# Virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

# Gradle
.gradle/
build/

# Maven
target/

# IntelliJ IDEA
*.iml
*.ipr
*.iws
.idea/

# Eclipse
.project
.classpath
.settings/
bin/

#################### C++

# Object files
*.o
*.ko
*.obj
*.a
*.lib

# Shared libraries (so)
*.so

# Static libraries (lib)
*.a
*.la

# Executables
*.exe
*.out
*.app
*.dmg

# Debug symbols
*.dSYM/

# CMake
CMakeFiles/
cmake_install.cmake

# Make
*.make

# Editor files
*.swp
*.swo
*.swn
*.bak
*.tmp

# Build directories
build/
out/
dist/

# Logs and caches
logs/
*.log
.cache/

# IDE files
*.iml
*.idea
.vscode/